// this file was generated by gomacro command: import _b "golang.org/x/tools/go/packages"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	. "reflect"

	packages "golang.org/x/tools/go/packages"
)

// reflection: allow interpreted code to import "golang.org/x/tools/go/packages"
func init() {
	Packages["golang.org/x/tools/go/packages"] = Package{
		Binds: map[string]Value{
			"ListError":           ValueOf(packages.ListError),
			"Load":                ValueOf(packages.Load),
			"LoadAllSyntax":       ValueOf(packages.LoadAllSyntax),
			"LoadFiles":           ValueOf(packages.LoadFiles),
			"LoadImports":         ValueOf(packages.LoadImports),
			"LoadSyntax":          ValueOf(packages.LoadSyntax),
			"LoadTypes":           ValueOf(packages.LoadTypes),
			"NeedCompiledGoFiles": ValueOf(packages.NeedCompiledGoFiles),
			"NeedDeps":            ValueOf(packages.NeedDeps),
			"NeedExportsFile":     ValueOf(packages.NeedExportsFile),
			"NeedFiles":           ValueOf(packages.NeedFiles),
			"NeedImports":         ValueOf(packages.NeedImports),
			"NeedName":            ValueOf(packages.NeedName),
			"NeedSyntax":          ValueOf(packages.NeedSyntax),
			"NeedTypes":           ValueOf(packages.NeedTypes),
			"NeedTypesInfo":       ValueOf(packages.NeedTypesInfo),
			"NeedTypesSizes":      ValueOf(packages.NeedTypesSizes),
			"ParseError":          ValueOf(packages.ParseError),
			"PrintErrors":         ValueOf(packages.PrintErrors),
			"TypeError":           ValueOf(packages.TypeError),
			"UnknownError":        ValueOf(packages.UnknownError),
			"Visit":               ValueOf(packages.Visit),
		}, Types: map[string]Type{
			"Config":    TypeOf((*packages.Config)(nil)).Elem(),
			"Error":     TypeOf((*packages.Error)(nil)).Elem(),
			"ErrorKind": TypeOf((*packages.ErrorKind)(nil)).Elem(),
			"LoadMode":  TypeOf((*packages.LoadMode)(nil)).Elem(),
			"Package":   TypeOf((*packages.Package)(nil)).Elem(),
		},
	}
}
